function gencenters(side, λ)
    n = pois_rand(λ * side^3)
    return reduce(hcat, (rand(1:side, 3) for i in 1:n))
end

function genballs(side, R, λ)
    sphere_side = 2R + 1
    padded_side = side + sphere_side
    spheres = zeros(Int8, (padded_side, padded_side, padded_side))
    sphere = zeros(Int8, (sphere_side, sphere_side, sphere_side))
    centers = gencenters(side, λ)
    for i in -R:R
        for j in -R:R
            for k in -R:R
                dist = i^2 + j^2 + k^2
                if dist < R^2
                    sphere[k+R+1, j+R+1, i+R+1] = 1
                end
            end
        end
    end

    for center in (centers[:,i] for i in 1:size(centers,2))
        x = center[1]
        y = center[2]
        z = center[3]
        spheres[x:x + 2R, y:y + 2R, z:z + 2R] .|= sphere
    end
    return spheres[R+1:end-R-1, R+1:end-R-1, R+1:end-R-1]
end

heaviside(x) = max(sign(x), 0)

function s2_theory(r, R, λ)
    tmp = r/R
    tmp2 = (r > 2R) ? 2 : 1 + 3/4*tmp - 1/16*tmp^3
    η = λ * 4/3 * π * R^3
    return exp(-η*tmp2)
end

function ss_theory(r, R, λ)
    η = λ * 4/3 * π * R^3
    tmp = 3η/R
    tmp2 = (tmp * (1 - (0.5 - r/(4R))*heaviside(2R-r)))^2 + tmp/(2r)*heaviside(2R-r)
    return s2_theory(r, R, λ) * tmp2
end

function l2_theory(r, R, λ)
    η = λ * 4/3 * π * R^3
    p = exp(-η)
    return p^(1 + 3r/(4R))
end

@testset "S2 on random overlapping balls generated by Poisson process" begin
    # Volume = S^3, radius of a disk = R
    # Poisson parameter = λ
    # Compare s2(x) for x ∈ {0,1,...,N-1}
    S = 500; R = 20; λ = 3e-5; N = 200
    spheres = genballs(S, R, λ)

    # Calculate in one direction for speed
    calc = mean(s2(spheres, N, 0; directions = [:x]))
    theory = [s2_theory(r - 1, R, λ) for r in 1:N]
    err = relerr.(calc, theory)

    @test maximum(err) < 0.2
end

@testset "SS on random overlapping balls generated by Poisson process" begin
    # Volume = S^3, radius of a disk = R
    # Poisson parameter = λ
    # Compare s2(x) for x ∈ {0,1,...,N-1}
    S = 500; R = 20; λ = 3e-5; N = 200
    spheres = genballs(S, R, λ)

    # Calculate in one direction for speed
    calc = log.(mean(surfsurf(spheres, 200, 0; directions = [:x])))
    theory = [log(ss_theory(r - 1, R, λ)) for r in 1:N]
    err = relerr.(calc, theory)

    @test maximum(err[2R + 10:end]) < 0.1
    @test_broken maximum(err[1:2R + 10]) < 0.1
end

@testset "L2 on random overlapping balls generated by Poisson process" begin
    # Volume = S^3, radius of a disk = R
    # Poisson parameter = λ
    # Compare s2(x) for x ∈ {0,1,...,N-1}
    S = 500; R = 20; λ = 3e-5; N = 100
    spheres = genballs(S, R, λ)

    calc = log.(mean(l2(spheres, N, 0)))
    theory = [log(l2_theory(r - 1, R, λ)) for r in 1:N]
    err = relerr.(calc, theory)

    @test maximum(err) < 0.15
end
